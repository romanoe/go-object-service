openapi: 3.0.0
info:
  title: GOELAND objects microservice
  description: This API allows reading and writing GOELAND objects
  version: 1.0.0
paths:
  /objects:
    get:
      summary: Return all objects
      description: Retrieves the id of all objects
      operationId: findObjects
      responses:
        200:
          description: Objects have been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
        404:
          description: Objects not found
    post:
      summary:  Add a new object
      description: Add a new object (id, created_at, type)
      operationId: addNewObject
      responses:
        201:
          description: Object has been created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
  /objects/{id}:
    get:
      summary: Returns an object by ID
      description: Returns an object based on a single ID
      operationId: findObjectByID
      parameters:
        - name : id
          in: path
          description: Object's ID to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Object's response
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Object'
        '404':
          description: ID not found
    delete:
      summary: Delete object
      description: Delete an object based on a single ID
      operationId: deleteObjectByID
      parameters:
        - name: id
          in: path
          description: ID of object to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: ID not found
        '401':
          description: Unauthorized
  /objects/types:
    get:
      summary: Return all objects' types
      description: Retrieves the id of all objects' types
      operationId: findObjectsTypes
      responses:
        200:
          description: Objects' types have been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
        404:
          description: Objects not found
    post:
      summary:  Add a new object type
      description: Add a new object type (id, value, is_active)
      operationId: addNewObjectType
      responses:
        201:
          description: Object type has been created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectType'
components:
  schemas:
    Object:
      allOf:
        - required:
            - id
            - fk_type
            - created_at
          properties:
            id:
              type: integer
              format: int64
              description: Object's unique ID
            fk_type:
              type: integer
              format: int64
              description: Object's type ID
            created_at:
              type: string
              format: date-time
              description: Object's creation date
    ObjectType:
      allOf:
        - required:
            - id
            - value
            - is_active
          properties:
            id:
              type: integer
              format: int64
              description: Objects' type ID
            value:
              type: string
              description: Objects' type definition value
            is_active:
              type: boolean
              default: true
              description: Objects' type activation status



